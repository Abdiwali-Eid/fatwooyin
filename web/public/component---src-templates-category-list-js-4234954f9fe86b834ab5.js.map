{"version":3,"file":"component---src-templates-category-list-js-4234954f9fe86b834ab5.js","mappings":"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","sources":["webpack://fatwo-hub/./src/styles/PageHeaderStyles.js","webpack://fatwo-hub/./src/components/PageHeader.js","webpack://fatwo-hub/./src/styles/PageSpaceStyles.js","webpack://fatwo-hub/./src/components/PageSpace.js","webpack://fatwo-hub/./src/styles/PaginationStyles.js","webpack://fatwo-hub/./src/components/Pagination.js","webpack://fatwo-hub/./src/styles/buttons/ButtonStyles.js","webpack://fatwo-hub/./src/components/buttons/Button.js","webpack://fatwo-hub/./src/styles/category/CategoryGridStyles.js","webpack://fatwo-hub/./src/styles/category/CategoryItemStyles.js","webpack://fatwo-hub/./src/components/category/CategoryItem.js","webpack://fatwo-hub/./src/components/category/CategoryGrid.js","webpack://fatwo-hub/./src/constants/buttonTypes.js","webpack://fatwo-hub/./src/templates/category-list.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const PageHeaderStyles = styled.div`\r\n  margin: 3rem 0;\r\n  max-width: 400px;\r\n`;\r\n","import React from 'react';\r\nimport { PageHeaderStyles } from '../styles/PageHeaderStyles';\r\nimport ParagraphText from './typography/ParagraphText';\r\nimport { SectionTitle } from './typography/Title';\r\n\r\nfunction PageHeader({ title, description, children, className }) {\r\n  return (\r\n    <div className={className}>\r\n      <PageHeaderStyles>\r\n        <SectionTitle style={{ color: 'white', paddingLeft: '10px' }}>\r\n          {title}\r\n        </SectionTitle>\r\n        <ParagraphText style={{ color: 'white', paddingLeft: '10px' }}>\r\n          {description}\r\n\r\n          {children}\r\n        </ParagraphText>\r\n      </PageHeaderStyles>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import styled from 'styled-components';\r\n\r\nexport const PageSpaceStyles = styled.div`\r\n  padding-top: ${(props) => props.top || 100}px;\r\n  padding-bottom: ${(props) => props.bottom || 100}px;\r\n`;\r\n","import React from 'react';\r\nimport { PageSpaceStyles } from '../styles/PageSpaceStyles';\r\n\r\nfunction PageSpace({ top, bottom, children }) {\r\n  return (\r\n    <PageSpaceStyles top={top} bottom={bottom}>\r\n      {children}\r\n    </PageSpaceStyles>\r\n  );\r\n}\r\n\r\nexport default PageSpace;\r\n","import styled from 'styled-components';\r\n\r\nexport const PaginationStyles = styled.div`\r\n  text-align: center;\r\n  margin-top: 5rem;\r\n  .icons {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 1rem;\r\n    margin-bottom: 1rem;\r\n    a {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      font-size: 1.6rem;\r\n      background: var(--gray);\r\n      padding: 0.8rem;\r\n      border-radius: 4px;\r\n      svg {\r\n        padding: 0;\r\n        margin: 0;\r\n      }\r\n      &.disabled {\r\n        opacity: 0.2;\r\n        pointer-events: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport clsx from 'clsx';\r\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\r\nimport { PaginationStyles } from '../styles/PaginationStyles';\r\nimport ParagraphText from './typography/ParagraphText';\r\n\r\nfunction Pagination({ baseURL, numberOfPages, currentPage }) {\r\n  const prevPage = currentPage - 1 <= 1 ? '' : (currentPage - 1).toString();\r\n  const nextPage = (currentPage + 1).toString();\r\n  return (\r\n    <div className=\"container\">\r\n      <PaginationStyles>\r\n        <div className=\"icons\">\r\n          <Link\r\n            to={`${baseURL}/${prevPage}`}\r\n            className={clsx(currentPage <= 1 && 'disabled')}\r\n          >\r\n            <FiChevronLeft /> Prev\r\n          </Link>\r\n          <Link\r\n            to={`${baseURL}/${nextPage}`}\r\n            className={clsx(currentPage >= numberOfPages && 'disabled')}\r\n          >\r\n            Next <FiChevronRight />\r\n          </Link>\r\n        </div>\r\n        <ParagraphText>\r\n          page {currentPage} of {numberOfPages} pages\r\n        </ParagraphText>\r\n      </PaginationStyles>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import { Link } from 'gatsby';\r\nimport styled from 'styled-components';\r\nimport { buttonTypes } from '../../constants/buttonTypes';\r\n\r\nexport const ButtonStyles = styled(Link)`\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: none;\r\n  padding: 1rem 2rem;\r\n  border-radius: 4px;\r\n  font-size: 1.6rem;\r\n  background: ${({ variant }) =>\r\n    variant === buttonTypes.primary\r\n      ? 'linear-gradient(135deg, var(--secondary), var(--primary))'\r\n      : variant === buttonTypes.secondary\r\n      ? 'var(--white-1)'\r\n      : 'transparent'};\r\n  border: ${({ variant }) =>\r\n    variant === buttonTypes.outline ? '2px solid var(--primary)' : 'none'};\r\n  color: ${({ variant }) =>\r\n    variant === buttonTypes.secondary ? 'var(--black-1)' : 'var(--white)'};\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 0.8rem 1.2rem;\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { buttonTypes } from '../../constants/buttonTypes';\r\nimport { ButtonStyles } from '../../styles/buttons/ButtonStyles';\r\n\r\nfunction Button({ children, tag, variant = buttonTypes.primary, ...props }) {\r\n  return (\r\n    <ButtonStyles as={tag} {...props} variant={variant}>\r\n      {children}\r\n    </ButtonStyles>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nexport const CategoryGridStyles = styled.div`\r\n  display: grid;\r\n  margin-top: 3.5rem;\r\n  display: grid;\r\n  gap: 5rem;\r\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n  @media only screen and (max-width: 768px) {\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    gap: 2rem;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const CategoryItemStyles = styled.div`\r\n  background: var(--black-2);\r\n  padding: 2rem;\r\n  border-radius: 6px;\r\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\r\n  .title {\r\n    margin-bottom: 1rem;\r\n  }\r\n  .text {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport MyPortableText from '../MyPortableText';\r\nimport Button from '../buttons/Button';\r\nimport { buttonTypes } from '../../constants/buttonTypes';\r\nimport { CategoryItemStyles } from '../../styles/category/CategoryItemStyles';\r\nimport { Title } from '../typography/Title';\r\n\r\nfunction CategoryItem({ title, description, slug }) {\r\n  return (\r\n    <CategoryItemStyles>\r\n      <Title className=\"title\">{title}</Title>\r\n      <div className=\"text\">\r\n        <MyPortableText value={description} />\r\n      </div>\r\n      <Button\r\n        to={`/categories/${slug.current}`}\r\n        variant={buttonTypes.secondary}\r\n        style={{ backgroundColor: '#79ade0' }}\r\n      >\r\n        Explore Category\r\n      </Button>\r\n    </CategoryItemStyles>\r\n  );\r\n}\r\n\r\nexport default CategoryItem;\r\n","import React from 'react';\r\nimport { CategoryGridStyles } from '../../styles/category/CategoryGridStyles';\r\nimport CategoryItem from './CategoryItem';\r\n\r\nfunction CategoryGrid({ categories }) {\r\n  return (\r\n    <CategoryGridStyles>\r\n      {categories.map((item) => (\r\n        <CategoryItem\r\n          key={item.id}\r\n          title={item.title}\r\n          description={item._rawDescription}\r\n          slug={item.slug}\r\n        />\r\n      ))}\r\n    </CategoryGridStyles>\r\n  );\r\n}\r\n\r\nexport default CategoryGrid;\r\n","export const buttonTypes = {\r\n  primary: 'primary',\r\n  secondary: 'secondary',\r\n  outline: 'outline',\r\n};\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PageSpace from '../components/PageSpace';\r\nimport SEO from '../components/seo';\r\nimport PageHeader from '../components/PageHeader';\r\nimport CategoryGrid from '../components/category/CategoryGrid';\r\nimport Pagination from '../components/Pagination';\r\n\r\nexport const CategoryListQuery = graphql`\r\n  query categoriesQuery($limit: Int!, $offset: Int!) {\r\n    allSanityCategory(\r\n      sort: { fields: _createdAt, order: DESC }\r\n      limit: $limit\r\n      skip: $offset\r\n    ) {\r\n      nodes {\r\n        id\r\n        title\r\n        slug {\r\n          current\r\n        }\r\n        _rawDescription\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Categories({ data, pageContext }) {\r\n  const { currentPage, numberOfPages } = pageContext;\r\n  const categories = data.allSanityCategory.nodes;\r\n\r\n  return (\r\n    <>\r\n      <SEO title=\"Categories\" />\r\n      <PageSpace top={80} bottom={100}>\r\n        <div className=\"container\">\r\n          <PageHeader\r\n            title=\"All Categories\"\r\n            description=\"This month will bring about the 88th Academy Awards. Starting in 1928, this prestigious award ceremony...\"\r\n          />\r\n          <CategoryGrid categories={categories} />\r\n          {numberOfPages > 1 && (\r\n            <Pagination\r\n              currentPage={currentPage}\r\n              numberOfPages={numberOfPages}\r\n              baseURL=\"/categories\"\r\n            />\r\n          )}\r\n        </div>\r\n      </PageSpace>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Categories;\r\n"],"names":["PageHeaderStyles","styled","div","withConfig","displayName","componentId","_ref","title","description","children","className","React","SectionTitle","style","color","paddingLeft","ParagraphText","PageSpaceStyles","props","top","bottom","PaginationStyles","baseURL","numberOfPages","currentPage","prevPage","toString","nextPage","Link","to","clsx","FiChevronLeft","FiChevronRight","ButtonStyles","variant","buttonTypes","primary","secondary","_ref2","outline","_ref3","tag","Object","assign","as","CategoryGridStyles","CategoryItemStyles","slug","Title","MyPortableText","value","Button","current","backgroundColor","categories","map","item","CategoryItem","key","id","_rawDescription","data","pageContext","allSanityCategory","nodes","SEO","PageSpace","PageHeader","CategoryGrid","Pagination"],"sourceRoot":""}